# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "hello"
    steps:
      - run: echo << parameters.to >>
# Orchestrate or schedule a set of jobs
jobs:
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["a8:26:17:fa:00:ba:f0:d0:26:c7:1f:8f:dc:8d:71:db"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" >~/helloworld.out 
      - persist_to_workspace:
          root: ~/
          paths:
            - helloworld.out
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/helloworld.out
      - run: exit 0
      - run: 
          name: testing_failure
          command: echo "Job Failed. Handle it!"
          when: on_fail
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
  my_workflow:
    jobs:
      - configure_infrastructure
    
